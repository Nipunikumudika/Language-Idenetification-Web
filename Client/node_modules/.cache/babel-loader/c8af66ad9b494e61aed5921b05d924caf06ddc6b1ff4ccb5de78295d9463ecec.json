{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\language_identifier\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.scss\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBBtn, MDBContainer, MDBNavbar, MDBNavbarBrand, MDBTextArea } from \"mdb-react-ui-kit\";\nimport React, { useState } from \"react\";\nimport { RotateLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [detectedLanguage, setDetectedLanguage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleDetectLanguage = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:5000/predict\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        // body: JSON.stringify({ features: inputText }),\n        body: inputText\n      });\n      console.log(inputText);\n      if (!response.ok) {\n        throw new Error(\"Failed to detect language\");\n      }\n      const data = await response.json();\n      setDetectedLanguage(data.prediction);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MDBNavbar, {\n      expand: \"lg\",\n      light: true,\n      style: {\n        backgroundColor: \"#e3f2fd\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(MDBNavbarBrand, {\n          href: \"#\",\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(\"./icon.png\"),\n            height: \"35\",\n            width: \"35\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \"Language Identifier\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 flex-fill\",\n        style: {\n          width: \"70vw\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n              className: \"text-start\",\n              style: {\n                color: \"blue\"\n              },\n              children: \"Input Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBTextArea, {\n              label: \"Input your Text\",\n              id: \"textAreaExample\",\n              rows: 4,\n              style: {\n                height: \"60vh\"\n              },\n              value: inputText,\n              onChange: e => setInputText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              onClick: handleDetectLanguage,\n              children: \"Detect Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 flex-fill\",\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          style: {\n            backgroundColor: \"transparent\",\n            boxShadow: \"none\",\n            marginRight: \"1vw\"\n          },\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n              className: \"text-start\",\n              style: {\n                color: \"blue\"\n              },\n              children: \"Detected Language:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCardTitle, {\n              style: {\n                marginTop: \"5vh\"\n              },\n              children: detectedLanguage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z8PX665qE4gq4m5YDUByAApcZ6g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MDBCard","MDBCardBody","MDBCardTitle","MDBBtn","MDBContainer","MDBNavbar","MDBNavbarBrand","MDBTextArea","React","useState","RotateLoader","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","detectedLanguage","setDetectedLanguage","loading","setLoading","handleDetectLanguage","response","fetch","method","headers","body","console","log","ok","Error","data","json","prediction","error","className","children","expand","light","style","backgroundColor","fluid","href","fontWeight","src","require","height","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","color","label","id","rows","value","onChange","e","target","onClick","boxShadow","marginRight","marginTop","_c","$RefreshReg$"],"sources":["E:/projects/language_identifier/Client/src/App.js"],"sourcesContent":["import \"./App.scss\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBBtn,\n  MDBContainer,\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBTextArea,\n} from \"mdb-react-ui-kit\";\nimport React, { useState } from \"react\";\nimport { RotateLoader } from \"react-spinners\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [detectedLanguage, setDetectedLanguage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleDetectLanguage = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:5000/predict\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'text/plain',\n        },\n        // body: JSON.stringify({ features: inputText }),\n        body: inputText, \n      });\nconsole.log(inputText);\n      if (!response.ok) {\n        throw new Error(\"Failed to detect language\");\n      }\n\n      const data = await response.json();\n      setDetectedLanguage(data.prediction);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }finally{\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <MDBNavbar expand=\"lg\" light style={{ backgroundColor: \"#e3f2fd\" }}>\n        <MDBContainer fluid>\n          <MDBNavbarBrand href=\"#\" style={{ fontWeight: \"bold\" }}>\n            <img src={require(\"./icon.png\")} height=\"35\" width=\"35\" alt=\"\" />\n            Language Identifier\n          </MDBNavbarBrand>\n        </MDBContainer>\n      </MDBNavbar>\n      <br />\n      <div className=\"d-flex\">\n        <div className=\"p-2 flex-fill\" style={{ width: \"70vw\" }}>\n          <MDBCard>\n            <MDBCardBody>\n              <MDBCardTitle className=\"text-start\" style={{ color: \"blue\" }}>\n                Input Text\n              </MDBCardTitle>\n              <MDBTextArea\n                label=\"Input your Text\"\n                id=\"textAreaExample\"\n                rows={4}\n                style={{ height: \"60vh\" }}\n                value={inputText}\n                onChange={(e) => setInputText(e.target.value)}\n              />\n              <br />\n              <MDBBtn onClick={handleDetectLanguage}>Detect Language</MDBBtn>\n            </MDBCardBody>\n          </MDBCard>\n        </div>\n        <div className=\"p-2 flex-fill\">\n          <MDBCard\n            style={{\n              backgroundColor: \"transparent\",\n              boxShadow: \"none\",\n              marginRight: \"1vw\",\n            }}\n          >\n            <MDBCardBody>\n              <MDBCardTitle className=\"text-start\" style={{ color: \"blue\" }}>\n                Detected Language:\n              </MDBCardTitle>\n              <MDBCardTitle style={{ marginTop: \"5vh\" }}>\n              {detectedLanguage}\n              </MDBCardTitle>\n            </MDBCardBody>\n          </MDBCard>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}